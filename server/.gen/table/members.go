//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var Members = newMembersTable("", "members", "")

type membersTable struct {
	sqlite.Table

	// Columns
	ID          sqlite.ColumnInteger
	Username    sqlite.ColumnString
	DisplayName sqlite.ColumnString
	Password    sqlite.ColumnString

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type MembersTable struct {
	membersTable

	EXCLUDED membersTable
}

// AS creates new MembersTable with assigned alias
func (a MembersTable) AS(alias string) *MembersTable {
	return newMembersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MembersTable with assigned schema name
func (a MembersTable) FromSchema(schemaName string) *MembersTable {
	return newMembersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MembersTable with assigned table prefix
func (a MembersTable) WithPrefix(prefix string) *MembersTable {
	return newMembersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MembersTable with assigned table suffix
func (a MembersTable) WithSuffix(suffix string) *MembersTable {
	return newMembersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMembersTable(schemaName, tableName, alias string) *MembersTable {
	return &MembersTable{
		membersTable: newMembersTableImpl(schemaName, tableName, alias),
		EXCLUDED:     newMembersTableImpl("", "excluded", ""),
	}
}

func newMembersTableImpl(schemaName, tableName, alias string) membersTable {
	var (
		IDColumn          = sqlite.IntegerColumn("id")
		UsernameColumn    = sqlite.StringColumn("username")
		DisplayNameColumn = sqlite.StringColumn("displayName")
		PasswordColumn    = sqlite.StringColumn("password")
		allColumns        = sqlite.ColumnList{IDColumn, UsernameColumn, DisplayNameColumn, PasswordColumn}
		mutableColumns    = sqlite.ColumnList{UsernameColumn, DisplayNameColumn, PasswordColumn}
	)

	return membersTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		Username:    UsernameColumn,
		DisplayName: DisplayNameColumn,
		Password:    PasswordColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
